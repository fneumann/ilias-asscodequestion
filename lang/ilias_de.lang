// German Language File for assCodeQuestion Plugin
<!-- language file start -->
used_lang#:#de
assCodeQuestion#:#Quelltext Frage
label_value1#:#Ihre Lösung:
any_text#:##Das könnte Ihre Antwort sein :)
source_lang#:#Sprache
code_prefix#:#Einführender Quellcode
code_postfix#:#Abschließender Quellcode
allow_run#:#Ausführen von Code (in unterstützten Sprachen) zulassen
best_solution#:#Musterlösung
code_prefix_info#:#Dieser Quellcode wird als unveränderbarer Text unmittelbar vor dem Eingabefeld für den Studenten angezeigt. Er wird auch vor dem Lösungstext des Studenten eingefügt wenn der Code ausgeführt werden soll.
code_postfix_info#:#Dieser Quellcode wird als unveränderbarer Text unmittelbar nach dem Eingabefeld für den Studenten angezeigt. Er wird auch nach dem Lösungstext des Studenten eingefügt wenn der Code ausgeführt werden soll.
best_solution_info#:#Die vorgeschlagene Musterlösung.
allow_run_info#:#Wenn <b>Python</b>-, <b>JavaScript</b>-, <b>Java</b>- oder <b>GLSL</b>-code programmiert wird, kann der Student während der Prüfung seinen eigenen Quellcode ausführen und das Ergebnis anzeigen lassen.
source_lang_info#:#Die Programmiersprache die wir zur Einfärbung und Code-Ausführung verwenden.
question_edit_info#:#Eine einfache Quellcode-Frage. Eingaben können mit Syntax-Highlighting versehen werden und (bei ausgewählten Sprachen) zur Laufzeit des Tests ausgeführt werden.<br>Innerhalb der Frage kann <b>[code][/code]</b> und <b>[hl][/hl]</b> verwendet werden um Quellcode auszuzeichnen.
run_code#:#Ausführen
test_code#:#Testen Sie Ihre Implementierung
timeout_ms#:#Laufzeitlimit in Millisekunden (ms)
timeout_ms_info#:#Maximale Laufzeit, um Unendlich-Schleifen und andere mögliche Fehler zu vermeiden
max_chars#:#Maximale Anzahl der Zeichen im Ausgabenbereich
max_chars_info#:#Maximale Anzahl von Zeichen, die im Ausgabebereich zulässig sind, um Ausgaben von Unendlichen Schleifen zu vermeiden.
cm_theme#:#Farbschema für den Texteditor
cm_theme_info#:#Wähle ein Farbschema für den Texteditor
cm_ro_theme#:#Farbschema für read-only Texteditor
cm_ro_theme_info#:#Wähle ein Farbschema für <b>read-only</b> Texteditor
empty_text#:# 
cq_blocks#:#Frageblöcke
cq_blocks_info#:#Die Frage wird aus den folgenden Blöcken zusammengestellt. Möglichen Typen sind:<ul><li><b>Freitext</b>: Text der wie der ursprüngliche Fragetext ohne Syntax highlighting angezeigt wird. Die <b>[code][/code]</b> und <b>[hl][/hl]</b> können verwendet werden</li><li><b>Code (Angabe)</b>: Nicht veränderbarer Quellcode mit Syntax highlighting. Der Inhalt ist deil des ausgeführten Programmes und sollte fest vorgegebenen Code enthalten.</li><li><b>Code (Versteckt)</b>: Der Quellcode ist teil der ausgelieferten Webseite, wird jedoch nicht angezeigt. Diese Variante kann code enthalten der Hilfsmethoden o.ä. definiert. Der Inhalt ist deil des ausgeführten Programmes und sollte fest vorgegebenen Code enthalten.</li><li><b>Lösung</b>: Quellcode mit Syntax highlighting. Hier sollte die Musterlösung angegeben werden. Der Inhalt ist deil des ausgeführten Programmes und sollte fest vorgegebenen Code enthalten.</li><li><b>Visualisierungsbereich</b>: Eine Zeichenfläche die nutzbar ist um die Ergebnisse der Studenten zu visualisieren. Der Code <b> muss ein JavaScript Object definieren</b>. Dises muss die Methoden <b>init(canvasElement)</b> und <b>update(outputObject, canvasElement)</b>, bereitstellen, wobei:<ul><li><b>outputObject</b>: die vom Studentencode erzeugte Zeichenkette, <b>update</b> kann einen wert zurückgeben der anstelle des ursprünglichen Ergebnisses angezeigt wird. Falls der Studentencode eine gültiger JSON-String ist wird dieser automatisch zu einem Objekt konvertiert und zurückgegeben.</li><li><b>canvasElement:</b> Das DOM-Element (also JQuery-Objekt) in dem gezeichnet werden kann </li></ul> Mit der Methode <b>setupThreeJSScene(canvasElement, setupCallback, renderCallback)</b> kann ein ThreeJS-Kontext erzeugt werden, mit <b>setupD3Scene(canvasElement, setupCallback)</b> einer für D3.</li></ul>
plain_text#:#Freitext
static_code#:#Code (Angabe)
solution_code#:#Lösung
hidden_code#:#Code (Versteckt)
canvas#:#Visualisierungsbereich
remove#:#ENTFERNEN
havethreejs#:#Three.JS einbetten
havethreejs_info#:#Three.JS (https://threejs.org) ist ein WebGL Szenengraph der in Canvas-Elementen (Visualisierungsbereich) verwendet werden kann.
havedthree#:#D3 einbetten
havedthree_info#:#D3 (https://d3js.org) ist eine Webkonforme Visualisierungsbibliothek
show_lines_label#:#Sichtbare Zeilen