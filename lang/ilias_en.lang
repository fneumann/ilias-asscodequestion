// English Language File for assCodeQuestion Plugin
<!-- language file start -->
used_lang#:#en
assCodeQuestion#:#Sourcecode Question
label_value1#:#Your Solution:
any_text#:##This could be your answer :)
source_lang#:#Source Language
code_prefix#:#Leading Sourcecode
code_postfix#:#Trailing Sourcecode
allow_run#:#Allow Codeexecution (in supported languages)
best_solution#:#Best Solution
code_prefix_info#:#This Code is displayd as static source code just before the input field for the solution. It is also prepended to the students solution when the code is executed.
code_postfix_info#:#This Code is displayd as static source code after the input field for the solution. It is also appended to the students solution when the code is executed.
best_solution_info#:#The suggested best solution for this Question
allow_run_info#:#If you use <b>Python</b>, <b>JavaScript</b>, <b>Java</b> or <b>GLSL</b> code, this will allow the Students to run the code and display it during the exam.
source_lang_info#:#The Language we use for Sytax-Highlighting and when executing Code.
question_edit_info#:#This is a basic SourceCode Question. It supports Syntax-Highlighting and (for select languages) Code Execution .<br>You may use <b>[code][/code]</b> and <b>[hl][/hl]</b> in your Question-Text to insert a syntax-highlighted code-box.
run_code#:#Run
test_code#:#Test your code
timeout_ms#:#Proccess timeout in ms
timeout_ms_info#:#Maximum runtime allowed to avoid infinit loops and other possible errors
max_chars#:#Maximum number of output characters
max_chars_info#:#Maximum numbers of characters allowed in the output area to avoid ouputs of long or inifnit loops
cm_theme#:#Select theme for text editor
cm_theme_info#:#Select color theme for the text editor
cm_ro_theme#:#Select theme for read-only text editor
cm_ro_theme_info#:#Select color theme for <b>read-only</b> text editor
empty_text#:# 
cq_blocks#:#Question Items
cq_blocks_info#:#The final Question is assembled using the following blocks. You my use the following block types:<ul><li><b>Plain Text</b>: Regular Text that is displayd as you Type it without any Syntax Highlighting. You may use <b>[code][/code]</b> and <b>[hl][/hl]</b> as a markup for inline source-code</li><li><b>Code (static)</b>: read-only Source Code with Syntax highlighting. The content is used to assemble the final Program.</li><li><b>Code (hidden)</b>: This Source Code is delivered to the client browser but invisible to the students. You may use this type for boiler-plate code you need for processing. The content is used to assemble the final Program.</li><li><b>Answer</b>: Source Code with Syntax highlighting. Should contain the best solution. The content is used to assemble the final Program.</li><li><b>Canvas Area</b>: A 2D-drawing area you may use to visualize the results produced by the studen. The code you specify <b> has to return a JavaScript Object</b>. It has to provide the methods <b>init(canvasElement)</b> and <b>update(outputObject, canvasElement)</b>, with:<ul><li><b>outputObject</b>: the String output generated by the Students Program, <b>update</b>may return the content that is displayed instead. When the student output is a valid JSON-String it is automaticlly converted to an object</li><li><b>canvasElement:</b> the DOM-Element (as JQuery Object) you need for drawing</li></ul>When using threeJS you can use <b>setupThreeJSScene(canvasElement, setupCallback, renderCallback)</b> to easily create a threeJS context. For D3 you may use <b>setupD3Scene(canvasElement, setupCallback)</b></li></ul>
plain_text#:#Plain Text
static_code#:#Code (static)
solution_code#:#Answer
hidden_code#:#Code (hidden)
canvas#:#Canvas Area
remove#:#REMOVE
havethreejs#:#Include Three.JS
havethreejs_info#:#Three.JS (https://threejs.org) is a WebGL-SceneGraph for Canvas Elements
havedthree#:#Include D3
havedthree_info#:#D3 (https://d3js.org) is a library for visualizing data using web standards.
show_lines_label#:#Visible Lines